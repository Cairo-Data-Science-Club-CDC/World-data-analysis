[["world-population.html", "Chapter 2 World population", " Chapter 2 World population This mini project explores total world population from 1960 to 2021. Learning objectives: Retrieve data from public resources in R. Intermediate-level ggplot visualization skills. How to summarize a figure. "],["data-collection.html", "2.1 Data collection", " 2.1 Data collection In this tutorial I’ll be retrieve data and metadata from World Bank on world popoulation between 1960 and 2021 WDI package. We start by loading the population data and countries metadata from World Bank. #population data country_pop &lt;- WDI::WDI(indicator=&#39;SP.POP.TOTL&#39;, start=1960, end=2022) #metadata country_meta &lt;- WDI::WDI_data$country Now let’s have a brief look on these two large tables. #data table glimpse(country_pop) ## Rows: 16,492 ## Columns: 5 ## $ country &lt;chr&gt; &quot;Africa Eastern and Southern&quot;, &quot;Africa Eastern and Souther… ## $ iso2c &lt;chr&gt; &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;, &quot;ZH&quot;… ## $ iso3c &lt;chr&gt; &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;AFE&quot;, &quot;A… ## $ year &lt;int&gt; 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012… ## $ SP.POP.TOTL &lt;dbl&gt; 694665117, 677243299, 660046272, 643090131, 626392880, 609… gt::gt(head(country_pop)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #jjzjlbqabf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jjzjlbqabf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jjzjlbqabf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jjzjlbqabf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #jjzjlbqabf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjzjlbqabf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jjzjlbqabf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jjzjlbqabf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jjzjlbqabf .gt_column_spanner_outer:first-child { padding-left: 0; } #jjzjlbqabf .gt_column_spanner_outer:last-child { padding-right: 0; } #jjzjlbqabf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jjzjlbqabf .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #jjzjlbqabf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jjzjlbqabf .gt_from_md > :first-child { margin-top: 0; } #jjzjlbqabf .gt_from_md > :last-child { margin-bottom: 0; } #jjzjlbqabf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jjzjlbqabf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #jjzjlbqabf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #jjzjlbqabf .gt_row_group_first td { border-top-width: 2px; } #jjzjlbqabf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jjzjlbqabf .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #jjzjlbqabf .gt_first_summary_row.thick { border-top-width: 2px; } #jjzjlbqabf .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjzjlbqabf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jjzjlbqabf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jjzjlbqabf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jjzjlbqabf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jjzjlbqabf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jjzjlbqabf .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #jjzjlbqabf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jjzjlbqabf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jjzjlbqabf .gt_left { text-align: left; } #jjzjlbqabf .gt_center { text-align: center; } #jjzjlbqabf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jjzjlbqabf .gt_font_normal { font-weight: normal; } #jjzjlbqabf .gt_font_bold { font-weight: bold; } #jjzjlbqabf .gt_font_italic { font-style: italic; } #jjzjlbqabf .gt_super { font-size: 65%; } #jjzjlbqabf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #jjzjlbqabf .gt_asterisk { font-size: 100%; vertical-align: 0; } #jjzjlbqabf .gt_indent_1 { text-indent: 5px; } #jjzjlbqabf .gt_indent_2 { text-indent: 10px; } #jjzjlbqabf .gt_indent_3 { text-indent: 15px; } #jjzjlbqabf .gt_indent_4 { text-indent: 20px; } #jjzjlbqabf .gt_indent_5 { text-indent: 25px; } country iso2c iso3c year SP.POP.TOTL Africa Eastern and Southern ZH AFE 2021 694665117 Africa Eastern and Southern ZH AFE 2020 677243299 Africa Eastern and Southern ZH AFE 2019 660046272 Africa Eastern and Southern ZH AFE 2018 643090131 Africa Eastern and Southern ZH AFE 2017 626392880 Africa Eastern and Southern ZH AFE 2016 609978946 #metadata table glimpse(country_meta) ## Rows: 299 ## Columns: 9 ## $ iso3c &lt;chr&gt; &quot;ABW&quot;, &quot;AFE&quot;, &quot;AFG&quot;, &quot;AFR&quot;, &quot;AFW&quot;, &quot;AGO&quot;, &quot;ALB&quot;, &quot;AND&quot;, &quot;ARB… ## $ iso2c &lt;chr&gt; &quot;AW&quot;, &quot;ZH&quot;, &quot;AF&quot;, &quot;A9&quot;, &quot;ZI&quot;, &quot;AO&quot;, &quot;AL&quot;, &quot;AD&quot;, &quot;1A&quot;, &quot;AE&quot;, … ## $ country &lt;chr&gt; &quot;Aruba&quot;, &quot;Africa Eastern and Southern&quot;, &quot;Afghanistan&quot;, &quot;Afri… ## $ region &lt;chr&gt; &quot;Latin America &amp; Caribbean&quot;, &quot;Aggregates&quot;, &quot;South Asia&quot;, &quot;Ag… ## $ capital &lt;chr&gt; &quot;Oranjestad&quot;, &quot;&quot;, &quot;Kabul&quot;, &quot;&quot;, &quot;&quot;, &quot;Luanda&quot;, &quot;Tirane&quot;, &quot;Ando… ## $ longitude &lt;chr&gt; &quot;-70.0167&quot;, &quot;&quot;, &quot;69.1761&quot;, &quot;&quot;, &quot;&quot;, &quot;13.242&quot;, &quot;19.8172&quot;, &quot;1.5… ## $ latitude &lt;chr&gt; &quot;12.5167&quot;, &quot;&quot;, &quot;34.5228&quot;, &quot;&quot;, &quot;&quot;, &quot;-8.81155&quot;, &quot;41.3317&quot;, &quot;42… ## $ income &lt;chr&gt; &quot;High income&quot;, &quot;Aggregates&quot;, &quot;Low income&quot;, &quot;Aggregates&quot;, &quot;Ag… ## $ lending &lt;chr&gt; &quot;Not classified&quot;, &quot;Aggregates&quot;, &quot;IDA&quot;, &quot;Aggregates&quot;, &quot;Aggreg… gt::gt(head(country_meta)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #kelajxrwvy .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #kelajxrwvy .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kelajxrwvy .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #kelajxrwvy .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #kelajxrwvy .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kelajxrwvy .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kelajxrwvy .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #kelajxrwvy .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #kelajxrwvy .gt_column_spanner_outer:first-child { padding-left: 0; } #kelajxrwvy .gt_column_spanner_outer:last-child { padding-right: 0; } #kelajxrwvy .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #kelajxrwvy .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #kelajxrwvy .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #kelajxrwvy .gt_from_md > :first-child { margin-top: 0; } #kelajxrwvy .gt_from_md > :last-child { margin-bottom: 0; } #kelajxrwvy .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #kelajxrwvy .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #kelajxrwvy .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #kelajxrwvy .gt_row_group_first td { border-top-width: 2px; } #kelajxrwvy .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kelajxrwvy .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #kelajxrwvy .gt_first_summary_row.thick { border-top-width: 2px; } #kelajxrwvy .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kelajxrwvy .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kelajxrwvy .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #kelajxrwvy .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #kelajxrwvy .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kelajxrwvy .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kelajxrwvy .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #kelajxrwvy .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kelajxrwvy .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kelajxrwvy .gt_left { text-align: left; } #kelajxrwvy .gt_center { text-align: center; } #kelajxrwvy .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #kelajxrwvy .gt_font_normal { font-weight: normal; } #kelajxrwvy .gt_font_bold { font-weight: bold; } #kelajxrwvy .gt_font_italic { font-style: italic; } #kelajxrwvy .gt_super { font-size: 65%; } #kelajxrwvy .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #kelajxrwvy .gt_asterisk { font-size: 100%; vertical-align: 0; } #kelajxrwvy .gt_indent_1 { text-indent: 5px; } #kelajxrwvy .gt_indent_2 { text-indent: 10px; } #kelajxrwvy .gt_indent_3 { text-indent: 15px; } #kelajxrwvy .gt_indent_4 { text-indent: 20px; } #kelajxrwvy .gt_indent_5 { text-indent: 25px; } iso3c iso2c country region capital longitude latitude income lending ABW AW Aruba Latin America &amp; Caribbean Oranjestad -70.0167 12.5167 High income Not classified AFE ZH Africa Eastern and Southern Aggregates Aggregates Aggregates AFG AF Afghanistan South Asia Kabul 69.1761 34.5228 Low income IDA AFR A9 Africa Aggregates Aggregates Aggregates AFW ZI Africa Western and Central Aggregates Aggregates Aggregates AGO AO Angola Sub-Saharan Africa Luanda 13.242 -8.81155 Lower middle income IBRD Looks like a lot of data! Let’s dive a bit deeper and explore the data visually. "],["data-visualization.html", "2.2 Data Visualization", " 2.2 Data Visualization I’ll start by defining a caption for plots stating the source of the data. data_caption &lt;- &quot;Data source: World Bank (WDI R package), Indicator: SP.POP.TOTL&quot; 2.2.1 Total world population First we look at world population as a whole. hmm, I wonder how does the world population look like over the years? country_pop %&gt;% filter(country == &quot;World&quot;) %&gt;% #select total world population ggplot(aes(year, SP.POP.TOTL))+ geom_point(alpha = 0.56)+ geom_line()+ labs(x = &quot;Year&quot;, y = &quot;Population&quot;, title = &quot;Total world population&quot;, subtitle = &quot;Global population between 1960 and 2021, one-year interval&quot;, caption = data_caption) The plot shows the increase world population from 3 billions to almost 8 billions between 1960 and 2021. Let’s have a better understanding of this increase by looking at the annual growth since 1960. diff_growth &lt;- country_pop %&gt;% filter(country == &quot;World&quot;) %&gt;% arrange(year) %&gt;% mutate(SP.POP.TOTL_diff = SP.POP.TOTL- lag(SP.POP.TOTL)) %&gt;% #subtract each ear from the previous na.omit()%&gt;% #remove 1960 ggplot(aes(year, SP.POP.TOTL_diff))+ geom_line()+ geom_vline(xintercept = c(1990, 2013, 2017), lty = 2, color = &quot;blue&quot;)+ labs(x = &quot;Year&quot;, y = &quot;Population&quot;, title = &quot;Annual growth of world population &quot;, subtitle = &quot;Absolute annual growth: difference between two subsequent years&quot;, caption = data_caption)+ labs(y = &quot;Population&quot;, x = &quot;Year&quot;) diff_growth We can see that around 1990 the annual growth peaked to around 90 millions. Around 2013 the annual growth hit a plateau followed by a decreasing pattern around 2017. We can also study the annual population growth by looking at the relative increase rather than the absolute. rel_growth &lt;- country_pop %&gt;% filter(country == &quot;World&quot;) %&gt;% arrange(year) %&gt;% mutate(SP.POP.TOTL_diff = (SP.POP.TOTL-lag(SP.POP.TOTL))/lag(SP.POP.TOTL)) %&gt;% na.omit()%&gt;% ggplot(aes(year, SP.POP.TOTL_diff))+ geom_line()+ geom_hline(yintercept = 0.01, lty = 2, color = &quot;red&quot;)+ geom_vline(xintercept = c(1990), lty = 2, color = &quot;blue&quot;)+ scale_y_continuous(labels = scales::percent_format())+ labs(x = &quot;Year&quot;, y = &quot;Percentage&quot;, title = &quot;&quot;, subtitle = &quot;Relative annual growth: divison of two subsequent years&quot;, caption = data_caption) rel_growth Here we can clearly see the decrease in population growth after 1990, dropping below 1% around 2020. Let’ combine these two complementary views of the world population growth in a single plot. diff_growth/rel_growth 2.2.2 World regions population Now let’s shift our focus from global to regional level. We start by adding the regions metadata. region_pop &lt;- country_pop %&gt;% left_join(country_meta)%&gt;% #merge data and metadata tables filter(region != &quot;Aggregates&quot;) %&gt;% #select regions group_by(region, year) %&gt;% summarize(SP.POP.TOTL_region = sum(SP.POP.TOTL, na.rm = TRUE))%&gt;% ungroup() %&gt;% mutate(year = as.integer(year)) ## Joining, by = c(&quot;country&quot;, &quot;iso2c&quot;, &quot;iso3c&quot;) ## `summarise()` has grouped output by &#39;region&#39;. You can override using the ## `.groups` argument. We then order the regions based on their initial populations at 1960. This would make it easier and more organized to plot. region_order &lt;- region_pop %&gt;% slice_min(year,n = 1) %&gt;% arrange(SP.POP.TOTL_region) We’ve previously looked at total world population over the years. Now let’s look at the contribution of each region to the world population. region_pop %&gt;% mutate(region = factor(region, region_order$region)) %&gt;% ggplot(aes(year, SP.POP.TOTL_region, fill = region))+ geom_col()+ scale_fill_brewer(palette = &quot;Dark2&quot;)+ guides(fill = guide_legend(override.aes = list(size = 0.5)))+ labs(x = &quot;Year&quot;, y = &quot;Percentage&quot;, title = &quot;World regions population&quot;, subtitle = &quot;Regions population between 1960 and 2021, one-year interval&quot;, caption = data_caption)+ theme(legend.position = c(0.05,0.8), legend.text = element_text(size = 8), legend.title = element_blank()) The plot shows that East Asia &amp; Pacific has the largest contribution to world population, while Middle East &amp; North Africa and North America have the smallest. It’s easier to think of relative contribution rather than absolute. region_pop %&gt;% mutate(region = factor(region, region_order$region)) %&gt;% ggplot(aes(year, SP.POP.TOTL_region, fill = region))+ geom_col(width = 1, position = position_fill())+ scale_y_continuous(labels = scales::percent_format())+ scale_fill_brewer(palette = &quot;Dark2&quot;)+ labs(x = &quot;Year&quot;, y = &quot;Percentage&quot;, title = &quot;World regions population&quot;, subtitle = &quot;Regions population between 1960 and 2021, one-year interval&quot;, caption = data_caption) I’ll take this plot step further by removing the legend and annotating the each region “stratum” in the plot. To do this, first, calculate the percentage of ordered regions populations at a 1960. Then, compute the cumulative sum of the percentages. Finally, find the middle of each region layer where the text will be added. #find the mid-point of each region&#39;s layer region_order &lt;- region_pop %&gt;% slice_min(year,n = 1) %&gt;% arrange(SP.POP.TOTL_region) %&gt;% mutate(region_percent = SP.POP.TOTL_region/sum(SP.POP.TOTL_region), region_cum = cumsum(region_percent), cum_mid = region_cum-(region_percent/2)) Now let’s look on the improved plot. region_pop %&gt;% mutate(region = factor(region, region_order$region)) %&gt;% ggplot(aes(year, SP.POP.TOTL_region, fill = region))+ geom_col(width = 1, position = position_fill(), show.legend = FALSE)+ geom_text(data = region_order, aes(year+30, 1-cum_mid, label = region), hjust = &quot;middle&quot;, color = &quot;white&quot;)+ scale_y_continuous(labels = scales::percent_format())+ scale_fill_brewer(palette = &quot;Dark2&quot;)+ labs(x = &quot;Year&quot;, y = &quot;Percentage&quot;, title = &quot;World regions population&quot;, subtitle = &quot;Regions population between 1960 and 2021, one-year interval&quot;, caption = data_caption) Looks pretty! It’s also easier to read. We can clearly see that East Asia &amp; Pacific has an almost constant contribution -around 30%- to world population. Europe and Sub-Saharan Africa have opposing trend in contribution with the first is first decreasing and the second increasing. Each world region has a different pattern and magnitude of population growth. Let’s make a heatmap that highlights these differences! We start by putting all regions on the same scale by calculating the z-score (how many standard deviation away from the mean year). region_pop &lt;- region_pop %&gt;% mutate(region = factor(region, rev(region_order$region))) %&gt;% #maintain the order of regions in the previous plots group_by(region) %&gt;% mutate(SP.POP.TOTL_region_scaled = scale(SP.POP.TOTL_region)[,1]) %&gt;% #calculate z-score ungroup() global_pop_mean_year &lt;- country_pop %&gt;% filter(country == &quot;World&quot;) %&gt;% mutate(SP.POP.TOTL_region_scaled = scale(SP.POP.TOTL)[,1]) %&gt;% slice_min(abs(SP.POP.TOTL_region_scaled), n=1) %$% year Let’s plot the heatmap region_pop %&gt;% ggplot(aes(year, region, fill = SP.POP.TOTL_region_scaled ))+ geom_tile()+ #add small bar at the average year for each region geom_point(data = . %&gt;% group_by(region) %&gt;% slice_min(abs(SP.POP.TOTL_region_scaled),n=1), shape = &quot;|&quot;, size = 8)+ #add line at the world average population year geom_segment(aes(x = global_pop_mean_year, y = 0.5, xend = global_pop_mean_year, yend = 7.5), lty = 2)+ annotate(&quot;text&quot;, x = global_pop_mean_year, y = 8, label = &quot;Global (dashed) and region (solid) mean year &quot;)+ scale_y_discrete(expand = expansion(add = c(0,2)))+ scale_fill_distiller(palette = &quot;RdBu&quot;)+ labs(x = &quot;Year&quot;, y = &quot;&quot;, fill = &quot;Scaled\\npopulation&quot;, title = &quot;World regions population&quot;, subtitle = &quot;Regions population between 1960 and 2021, one-year interval&quot;, caption = data_caption)+ theme(axis.line.y = element_blank(), axis.ticks.y = element_blank(), #legend specification legend.direction = &quot;horizontal&quot;, legend.position = &quot;top&quot;, legend.justification=&quot;right&quot;, legend.key.width = unit(0.5, &quot;cm&quot;), legend.box.background = element_rect(color=&quot;grey20&quot;, linewidth=1, fill = &quot;grey95&quot;), legend.box.margin = margin(4, 4, 4, 4), legend.text = element_text(size = 10), legend.title = element_text(size = 10)) Few patterns pop-out. Sub-Saharan Africa and Middle East &amp; North Africa show the largest region-specific growth. This large growth took place recently and over a short period. Europe had the smallest population at 1960 compared to other years. Heatmaps are very useful and scalable to visualize large datasets. Neverthelss, for our small dataset, we can simply look at the regions population over the years compared to 2021. region_pop &lt;- region_pop %&gt;% mutate(region = factor(region, rev(region_order$region))) %&gt;% group_by(region) %&gt;% mutate(SP.POP.TOTL_region_perc = SP.POP.TOTL_region/tail(SP.POP.TOTL_region,1)) %&gt;%#percentage compared to 2021 ungroup() Let’s look at the plot region_pop %&gt;% ggplot(aes(year, SP.POP.TOTL_region_perc, color = region))+ geom_line(show.legend = FALSE)+ ggrepel::geom_text_repel(data = . %&gt;% filter(year == 1960), aes(label = region), force = 0.5, nudge_x = -5, direction = &quot;y&quot;, hjust = 1, show.legend = FALSE)+ scale_color_brewer(palette = &quot;Dark2&quot;)+ scale_y_continuous(labels = scales::percent_format())+ scale_x_continuous(breaks = seq(1960,2020, by = 10), expand = expansion(add = c(30,3)))+ labs(x = &quot;Year&quot;, y = &quot;Scaled cumulative growth&quot;, title = &quot;World regions population growth&quot;, subtitle = &quot;Relative population growth of world regions since 1960 compared to 2021&quot;, caption = data_caption)+ theme(legend.position = c(0.6, 0.3)) Europe &amp; Central Asia population grew by only 30% since 1960 compared to Middle East &amp; North Africa and Sub-Saharan Africa huge 80% growth! Similarly, is to compare population over the years to 1960. region_pop &lt;- region_pop %&gt;% mutate(region = factor(region, rev(region_order$region))) %&gt;% group_by(region) %&gt;% mutate(SP.POP.TOTL_region_start = log2(SP.POP.TOTL_region/head(SP.POP.TOTL_region,1))) %&gt;% ungroup() Let’s look at the plot region_pop %&gt;% ggplot(aes(year, SP.POP.TOTL_region_start, color = region))+ geom_line(show.legend = FALSE)+ ggrepel::geom_text_repel(data = . %&gt;% filter(year == 2021), aes(label = region), force = 0.5, nudge_x = 5, direction = &quot;y&quot;, hjust = &quot;left&quot;, show.legend = FALSE)+ scale_color_brewer(palette = &quot;Dark2&quot;)+ scale_x_continuous(breaks = seq(1960,2020, by = 10), expand = expansion(add = c(3,30)))+ labs(x = &quot;Year&quot;, y = &quot;Fold increase relative to 1960&quot;, fill = &quot;Scaled\\npopulation&quot;, title = &quot;Relative world regions growth&quot;, subtitle = &quot;World regions population growth over the years, relative to 1960&quot;, caption = data_caption)+ theme(legend.direction = &quot;horizontal&quot;, legend.position = &quot;top&quot;, legend.justification=&quot;right&quot;, legend.key.width = unit(0.75, &quot;cm&quot;), legend.box.background = element_rect(color=&quot;grey20&quot;, linewidth=1, fill = &quot;grey95&quot;), legend.box.margin = margin(4, 4, 4, 4)) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
